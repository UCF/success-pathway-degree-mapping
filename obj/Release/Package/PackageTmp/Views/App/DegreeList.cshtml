@model List<DegreeMapping.Models.Degree>
@{
    string path = "/pathway";
    int catalogId = Model.Select(x => x.CatalogId).FirstOrDefault();
    int degreeCount = Model.Where(x => x.InstitutionId == DegreeMapping.Models.Institution.UCFId).Count();
    DegreeMapping.Models.Catalog cy = DegreeMapping.Models.Catalog.Get(catalogId);
    List<DegreeMapping.Models.Catalog> list_cy = DegreeMapping.Models.Catalog.List();
    List<DegreeMapping.Models.Institution> list_i = DegreeMapping.Models.Institution.List();
    List<DegreeMapping.Models.Degree> list_UCFDegrees = Model.Where(x => x.InstitutionId == DegreeMapping.Models.Institution.UCFId).ToList();
    List<DegreeMapping.Models.Degree> list_parnterDegrees = Model.Where(x => x.InstitutionId != DegreeMapping.Models.Institution.UCFId).ToList();


    System.Web.Script.Serialization.JavaScriptSerializer jss = new System.Web.Script.Serialization.JavaScriptSerializer();
    string JSONInstitutionList = jss.Serialize(list_i);
    string JSONUCFDegreeList = jss.Serialize(list_UCFDegrees);
    string JSONPartnerDegreeList = jss.Serialize(list_parnterDegrees);
    string title = (catalogId > 0) ? list_cy.Where(x => x.Id == catalogId).Select(x => x.Year).FirstOrDefault() + " Degree List" : "Select Catalog Year";
}
@section JumbotronMain {
    <div class="jumbotron jumbotron-fluid" style="background-color:@cy.BGColor">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1 class="heading-underline">@cy.Year Pathway Catalog</h1>
                    <h2>@degreeCount degrees</h2>
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("DegreeList", "App", FormMethod.Post, new { @Class = "form-inline" }))
        {
            <div class="form-group">
                <input type="text" placeholder="Search degrees" style="width:500px" class="form-control" name="keyword" id="keyword" autocomplete="true" aria-autocomplete="list" aria-haspopup="false" autocapitalize="off" autocorrect="off" title="Degree Search" aria-label="Degree Search">
                <button type="submit" class="btn btn-primary btn-lg">Search</button>
                <button type="button" class="btn btn-info btn-lg" onclick="portalDegreeList.clear();">Clear</button>
            </div>
        }
    </div>
</div>

    <div class="container pt-5">
        <div class="row">
            <div class="clearfix">
                @Html.ActionLink("New Degree", "DegreeAdd", "App", new { institutionId = DegreeMapping.Models.Institution.UCFId, catalogId = catalogId }, new { @class = "btn btn-primary btn-lg" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div id="degreeListOutput" style="font-size:22px"></div>
            </div>
        </div>

        @*THIS Is not used, degree list comes from json*@
    </div>

    <script type="text/javascript">

    $(document).ready(function () {
        $("#catalogId").on("change", function () {
            let id = $(this).val();
            window.location.href = '?catalogId=' + id;
        })
    })

        var portalDegreeList = {
            target: {
                degreeListOutput: "degreeListOutput",
            },
            ucfInstitutionId: 1,
            ucfDegreeList: @Html.Raw(JSONUCFDegreeList),
            partnerDegreeList: @Html.Raw(JSONPartnerDegreeList),
            institutionList : @Html.Raw(JSONInstitutionList),
            displayDegreeList: function (degreelist) {
                let stopCounter = 0;
                let output = '';
                let notActiveHtml = '<span class="px-3 h5" style="color:red">Not Active TTT</span>';
                for (let x = 0; x <= degreelist.length - 1; x++) {
                    if (degreelist[x].Active) {
                        output += '<li><strong>UCF ' + degreelist[x].Name + '</strong><a href="@path/App/DegreeView/' + degreelist[x].Id + '"> Edit</a></li>'
                    } else {
                        output += '<li><strong>UCF ' + degreelist[x].Name + '</strong><a href="@path/App/DegreeView/' + degreelist[x].Id + '"> Edit</a>' + notActiveHtml + '</li>'
                    }
                    for (let y = 0; y <= this.institutionList.length - 1; y++) {
                        if (this.institutionList[y].Id != 1) {
                            let hasDegree = false;
                            let partnerLi = '';
                            let partnerLiNoInfo = '';
                            for (let z = 0; z <= this.partnerDegreeList.length - 1; z++) {

                                if (stopCounter < 10) {
                                    //d.Id == d2.UCFDegreeId && i.Id == d2.InstitutionId
                                    console.log('degreelist[x].Id: ' + degreelist[x].Id);
                                    console.log('this.partnerDegreeList[z].UCFDegreeId: ' + this.partnerDegreeList[z].UCFDegreeId);
                                    console.log('this.institutionList[y].Id: ' + this.institutionList[y].Id);
                                    console.log('this.partnerDegreeList[z].InstitutionId: ' + this.partnerDegreeList[z].InstitutionId);
                                    console.log('---');
                                }
                                stopCounter++;
                                if (degreelist[x].Id == this.partnerDegreeList[z].UCFDegreeId && this.institutionList[y].Id == this.partnerDegreeList[z].InstitutionId) {
                                    hasDegree = true;
                                    if (this.partnerDegreeList[z].Active) {
                                        partnerLi = '<li><a href="@path/App/DegreeView/' + this.partnerDegreeList[z].Id + '">' + this.institutionList[y].Name + '</a></li>';
                                    } else {
                                        partnerLi = '<li><a href="@path/App/DegreeView/' + this.partnerDegreeList[z].Id + '">' + this.institutionList[y].Name + '</a>' + notActiveHtml + '</li>';
                                    }
                                }
                            }
                            if (!hasDegree) {
                                partnerLiNoInfo += this.institutionList[y].Name;
                                partnerLiNoInfo += '<span style="color:red" class="px-2">no information</span>';
                                partnerLiNoInfo += '<a href="@path/App/DegreeAdd/?institutionId=' + this.institutionList[y].Id + '&catalogid=' + @catalogId + '">Add</a>';
                                partnerLiNoInfo = '<li>' + partnerLiNoInfo + '</li>';
                            }
                            output += '<ul>' + partnerLi + partnerLiNoInfo + '</ul>';
                        }
                    }

                }
                output = '<ul>' + output + '</ul>';
                $('#' + this.target.degreeListOutput).html(output);
            },
            search: function (keyword) {
                //let keyword = $('#keyword').val();
                if (keyword.length < 1) {
                    this.displayDegreeList(this.ucfDegreeList);
                    return;
                }
                let obj = [];
                keyword = keyword.toLowerCase()
                if (keyword.length >= 2) {
                    keyword = (keyword == 'babs') ? 'b.a.b.s.' : keyword;
                    keyword = (keyword == 'bsba') ? 'b.s.b.a.' : keyword;
                    keyword = (keyword == 'ba') ? 'b.a.' : keyword;
                    keyword = (keyword == 'bs') ? 'b.s.' : keyword;
                    keyword = (keyword == 'ae') ? 'a.e.' : keyword;
                    keyword = (keyword == 'ce') ? 'c.e.' : keyword;
                    keyword = (keyword == 'bsw') ? 'b.s.w.' : keyword;
                    for (x = 0; x <= this.ucfDegreeList.length - 1; x++) {
                        let ucfdegree = this.ucfDegreeList[x].Name.toLowerCase();
                        if (ucfdegree.search(keyword) >= 0) {
                            obj.push(this.ucfDegreeList[x]);
                        }
                    }
                    this.displayDegreeList(obj);
                }
                if (obj.length == 0) {
                    $('#' + this.target.degreeListOutput).html('No degrees found')
                }
            },
            clear: function () {
                this.displayDegreeList(this.ucfDegreeList);
                $('#keyword').val('');
            },
            init: function () {
                this.displayDegreeList(this.ucfDegreeList);
            }
        }
        $(document).ready(function () {
            portalDegreeList.init();
            $("#keyword").on('keyup', function () {
                if ($(this).val().length >= 2) {
                    portalDegreeList.search($(this).val());
                }
                if ($(this).val().length == 0) {
                    portalDegreeList.clear();
                }
            })
        })
    </script>