@model List<DegreeMapping.Models.Degree>
@{
    int catagoryId = ViewBag.catagoryId;
    List<DegreeMapping.Models.Catalog> list_cy = ViewBag.list_cy;
    string catalogYear = list_cy.Where(x => x.Id == catagoryId).Select(x => x.Year).FirstOrDefault();
}

@section JumbotronMain {
    <div class="jumbotron jumbotron-fluid">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="h1">Pathway Catalogs</div>
                </div>
            </div>
        </div>
    </div>
}

<div class="container">
    @Html.Action("_DisplayFavoriteDegree", "App", new { NID = User.Identity.Name })
    <div class="row pt-5">
        <h2 class="heading-underline">Active Catalogs</h2>
        <div class="col-md-12">
            <div class="card-deck">
                @foreach (DegreeMapping.Models.Catalog cy in list_cy.OrderByDescending(x => x.Current).ThenByDescending(x => x.Year).Where(x => x.Active))
                {
                    string cssClassCurrent = string.Empty;//(cy.Current) ? "bg-success" : string.Empty;
                    string cssCurrentCatalogBorder = (cy.Current) ? "border:3px solid green" : string.Empty;
                    <div class="card mt-5 mb-5" style="@cssCurrentCatalogBorder; max-width: 335px">
                        <div class="py-5 card-header text-center @cssClassCurrent" style="background-color:@cy.BGColor">
                            <h2 class="h1"> @cy.Year</h2>
                            @if (cy.Current)
                            {
                                <div class="w-100" style="background-color:green">Current</div>
                            }
                            else
                            {
                                <div>&nbsp;</div>
                            }
                        </div>
                        @using (Html.BeginForm("CatalogSave", "App", FormMethod.Post, new { @Class = "form-horizontal" }))
                        {
                            @Html.HiddenFor(x => cy.Id)
                            @Html.HiddenFor(x => cy.Year)
                            @Html.HiddenFor(x => cy.Active)

                            <div class="card-block">
                                <div>@Html.LabelFor(c => cy.UndergraduateCatalogURL)</div>
                                <div>
                                    @Html.TextBoxFor(x => cy.UndergraduateCatalogURL, new { Style = "width:400px" })
                                    @if (!string.IsNullOrEmpty(cy.UndergraduateCatalogURL))
                                    {
                                        <p><a href="@cy.UndergraduateCatalogURL" title="@cy.UndergraduateCatalogURL" target="_blank">View undergraduate catalog</a></p>
                                    }
                                    else
                                    {
                                        <p>&nbsp;</p>
                                    }
                                </div>
                            </div>
                            <div>
                                @if (User.IsInRole(DegreeMapping.Models.Role.Admin))
                                {
                                    <div class="pl-2">
                                        <fieldset>
                                            <lengend><strong>Admin only</strong></lengend>
                                            <div class="pl-4">
                                                @Html.LabelFor(x => cy.BGColor) :
                                                @Html.TextBoxFor(x => cy.BGColor)
                                                <br />
                                                @Html.LabelFor(x => cy.DisplayOnWeb) :
                                                @Html.CheckBoxFor(x => cy.DisplayOnWeb)
                                                <br />
                                                <strong>Current catalog : @(cy.Current ? " Yes" : "No")</strong>
                                                @Html.HiddenFor(x => cy.Current)

                                                @*********************************************************************************************************
                                                August 2023 a user set the current catalog to NO and no default current catalog was set.
                                                This caused the entire website to crash. Setting current catalog now must be set manually in the database.
                                                *********************************************************************************************************@
                                                @*<label class="pr-3">Yes @Html.RadioButtonFor(x => cy.Current, true)</label>
                                                <label>No @Html.RadioButtonFor(x => cy.Current, false)</label>*@

                                                <div><strong>Catalog Roles:</strong></div>
                                                <div class="pl-2"><label>@Html.RadioButtonFor(x => cy.EditableRoleId, 2) Admin Only</label></div>
                                                <div class="pl-2"><label>@Html.RadioButtonFor(x => cy.EditableRoleId, 3) Publisher</label></div>
                                            </div>
                                        </fieldset>
                                    </div>
                                }
                                else
                                {
                                    @Html.HiddenFor(x => cy.EditableRoleId)
                                    @Html.HiddenFor(x => cy.BGColor)
                                    @Html.HiddenFor(x => cy.DisplayOnWeb)
                                }
                            </div>
                            if (User.IsInRole(cy.EditableRole))
                            {
                                <div class="card-footer pt-5">
                                    @Html.ActionLink("View Catalog", "DegreeList", "App", new { id = cy.Id }, new { @Class = "btn btn-primary btn-block btn-lg" })
                                    <button type="submit" class="btn btn-success btn-block btn-lg">Save</button>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info">This Catalog is closed for editing</div>
                            }
                        }
                    </div>
                }



            </div>
        </div>
    </div>
</div>

@if (Model.Count > 0)
{
    string cataloYear = Model.Select(x => x.CatalogYear).FirstOrDefault();

    <div class="row pt-5">
        <h2>UCF Degrees</h2>
        <div class="col-md-12">
            <ul>
                @foreach (DegreeMapping.Models.Degree d in Model.OrderBy(x => x.Name))
                {
                    <li>@Html.ActionLink(d.Name, "DegreeView", "App", new { id = d.Id }, null)</li>
                }
            </ul>
        </div>
    </div>

}

<script type="text/javascript">
    $(document).ready(function () {
        $("#catalogId").on("change", function () {
            let id = $(this).val();
            window.location.href = '?id=' + id;
        })
    })
</script>