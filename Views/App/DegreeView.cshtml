@model DegreeMapping.Models.Degree
@{
    List<DegreeMapping.Models.Course> list_c = DegreeMapping.Models.Course.List(Model.Id);
    List<DegreeMapping.Models.Note> list_n = DegreeMapping.Models.Note.List(Model.Id);
    List<DegreeMapping.Models.Note> list_ucfNotes = new List<DegreeMapping.Models.Note>();
    if (Model.UCFDegreeId.HasValue)
    {
        list_ucfNotes = DegreeMapping.Models.Note.List(Model.UCFDegreeId.Value);
    }
    string cssClass = (string.IsNullOrEmpty(Model.Description)) ? "" : "alert alert-warning";
    string collegeURL = string.Empty;
    if (Model.CollegeId > 0)
    {
        collegeURL = DegreeMapping.Models.College.Get(Model.CollegeId).Url;
    }
    if (Model.UCFDegreeId.HasValue)
    {
        DegreeMapping.Models.Degree ucfDegree = DegreeMapping.Models.Degree.Get(Model.UCFDegreeId.Value);
        Model.DegreeURL = (!string.IsNullOrEmpty(Model.DegreeURL)) ? Model.DegreeURL : ucfDegree.DegreeURL;
        Model.CollegeName = (!string.IsNullOrEmpty(Model.CollegeName)) ? Model.CollegeName : ucfDegree.CollegeName;
        Model.LimitedAccess = ucfDegree.LimitedAccess;
        Model.RestrictedAccess = ucfDegree.RestrictedAccess;
        Model.GPA = ucfDegree.GPA;
    }
}

<div class="row pt-5">
    <div class="col-md-12">
        <small>
            @Html.ActionLink(Model.Institution + " Degree List", "InstitutionView", new { id = Model.InstitutionId })
        </small>
        <h1>@Model.CatalogYear  @Html.Raw(Model.Name)</h1>
        <h2>@Model.Institution</h2>
    </div>
</div>

<div class="row pt-5">
    <div class="col-md-6">
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(x => x.Active) : @(Model.Active?"Yes":"No")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(x => x.CollegeName) : College of @Model.CollegeName
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(x => x.CatalogUrl) :
                @if (!string.IsNullOrEmpty(Model.CatalogUrl))
                {
                    <a href="@Html.Raw(Model.CatalogUrl)" target="_blank">@Html.Raw(Model.CatalogUrl)</a>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(x => x.DegreeURL) :
                @if (!string.IsNullOrEmpty(Model.DegreeURL))
                {
                    <a href="@Html.Raw(Model.DegreeURL)" target="_blank">@Html.Raw(Model.DegreeURL)</a>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(x => x.GPA) : @Model.GPA
            </div>
        </div>

        <div class="form-group hidden">
            <div class="col-md-10">
                @Html.LabelFor(x => x.DegreeType) : @Html.Raw(Model.DegreeType)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(x => x.LimitedAccess) : @(Model.LimitedAccess?"Yes":"No")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(x => x.RestrictedAccess) : @(Model.RestrictedAccess?"Yes":"No")
            </div>
        </div>

        <div class="form-group" style="display:none">
            <div class="col-md-10 @cssClass">
                @Html.LabelFor(x => x.Description) : @Html.Raw(Model.Description)
            </div>
        </div>

        <div class="form-group hidden">
            <div class="col-md-10">
                @Html.LabelFor(x => x.CatalogYear) : @Model.CatalogYear
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.ActionLink("Edit Degree", "DegreeEdit", "App", new { id = Model.Id }, null)
            </div>
        </div>
    </div>
    @if (Model.InstitutionId > 1)
    {
        <div class="col-md-6">
            <h2 class="pt-5">UCF Related Degree</h2>
            @if (string.IsNullOrEmpty(Model.UCFDegreeName))
            {
                <div>
                    Not Assigned
                </div>
            }
            else
            {
                <div>
                    Degree is mapped to UCF @Model.UCFDegreeName
                </div>
            }
        </div>
    }
</div>

<div class="row pt-5">
    @if (Model.InstitutionId == DegreeMapping.Models.Institution.UCFId)
    {
        <h2 class="heading-underline">@Model.Institution Notes/Requirements</h2>
        <div class="col-md-12">
            @Html.ActionLink("Add Note", "NoteAdd", new { degreeId = Model.Id })
            @if (list_n.Count > 0)
            {
                <ul>
                    @foreach (DegreeMapping.Models.Note n in list_n)
                    {
                        <li>
                            @Html.ActionLink(n.Name, "NoteView", new { id = n.Id })
                        </li>
                    }
                </ul>
            }
        </div>
    }
    else
    {
        <h2 class="heading-underline">Notes for @Model.Institution</h2>
        <div class="col-md-12">
            <!--UCF NOTES HERE-->

            <div><h3>UCF Notes</h3></div>
                @if (list_ucfNotes.Where(x => x.NoteType.Equals(DegreeMapping.Models.Note.NoteTypeValue.ListItem)).ToList().Count > 0)
                {

                    <ul>
                        @foreach (DegreeMapping.Models.Note n in list_ucfNotes.Where(x => !string.IsNullOrEmpty(x.Value)).OrderBy(x => x.OrderBy))
                        {
                            if (n.NoteType.Equals(DegreeMapping.Models.Note.NoteTypeValue.ListItem))
                            {
                                <li>@Html.Raw(n.Value)</li>
                            }
                        }

                    </ul>
                }
                else 
                { 
                    <div><em>--No notes found</em></div>
                }
            <div><h3>@Model.Institution Notes</h3></div>
            @if (list_n.Count > 0)
            {
                <ul>
                    @foreach (DegreeMapping.Models.Note n in list_n.Where(x => !string.IsNullOrEmpty(x.Value)).OrderBy(x => x.OrderBy))
                    {
                        if (n.NoteType.Equals(DegreeMapping.Models.Note.NoteTypeValue.ListItem))
                        {
                            <li>
                                @Html.ActionLink(n.Value, "NoteEdit", new { id = n.Id })
                            </li>
                        }
                    }
                </ul>
            }
            @Html.ActionLink("Add Note", "NoteAdd", new { degreeId = Model.Id }, new { @Class = "btn btn-primary btn-lg" })
        </div>
    }
</div>

<!-- #region SECTION FOR PARTNER INSTITUTION -->
@if (Model.InstitutionId != DegreeMapping.Models.Institution.UCFId)
{
    <div class="row pt-5">
        <h2 class="heading-underline">Course List</h2>
        <div class="col-md-12">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>&nbsp;</th>
                        @*<th>UCF Course</th>*@
                        @*<th>Units / Credits</th>*@
                        <th>Partner Course</th>
                        <th>Credits</th>
                        <th>Critical Course</th>
                        <th>Common Program Prerequisite (CPP)</th>
                        <th>Required Core Course</th>
                        <th>
                            @Html.ActionLink("Add Course", "CourseAdd", "App", new { degreeId = Model.Id }, new { @Class = "btn btn-primary btn-lg" })
                        </th>
                    </tr>
                </thead>

                @if (list_c.Count > 0)
                {
                    <tbody>
                        @foreach (DegreeMapping.Models.Course c in list_c.OrderBy(x => x.Code))
                        {
                            <tr>
                                <td>@Html.ActionLink("Edit", "CourseEdit", new { id = c.Id })</td>
                                @*<td>@Html.Raw(c.UCFRelatedCourse)</td>*@
                                @*<td>@c.UCFCourseCredits</td>*@
                                <td>@c.Code</td>
                                <td>@c.Credits</td>
                                <td>-</td>
                                <td>-</td>
                                <td>-</td>
                                <td>
                                    @Html.ActionLink("Delete", "CourseDelete", "App", new { id = c.Id, degreeId = Model.Id }, new { @Class = "btn btn-danger btn-lg", onclick = "return confirm('Are you sure you wish to delete this course and course mappings?');" })
                                </td>
                            </tr>
                        }
                    </tbody>
                }
            </table>
        </div>
    </div>
}
<!-- #endregion -->
<!-- #region Sectopm for UCF -->
@if (Model.InstitutionId == DegreeMapping.Models.Institution.UCFId)
{
    <div class="row pt-5">
        <h2 class="heading-underline">@Model.Institution Courses</h2>
        <div class="col-md-12">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>&nbsp;</th>
                        <th>Course</th>
                        <th>Credits</th>
                        <th>Critial Course</th>
                        <th>Common Program Prerequisite (CPP)</th>
                        <th>Required Core Course</th>
                        <th>@Html.ActionLink("Add Course", "CourseAdd", "App", new { degreeId = Model.Id }, new { @Class = "btn btn-primary btn-lg" })</th>
                    </tr>
                </thead>
                <tbody>
                    @if (list_c.Count > 0)
                    {
                        string semester = string.Empty;
                        foreach (DegreeMapping.Models.Course c in list_c.OrderBy(x => x.Semester).ThenBy(x=>x.Term).ThenBy(x => x.Code))
                        {
                            if (semester != c.SemesterTerm)
                            {
                                semester = c.SemesterTerm;
                                <tr>
                                    <td colspan="7" class="alert alert-warning text-center h3">Semester @c.Semester @c.Term</td>
                                </tr>
                            }
                            <tr>
                                <td>@Html.ActionLink("Course Edit", "CourseEdit", "App", new { id = c.Id }, null)</td>
                                <td>@c.Code</td>
                                <td>@c.Credits</td>
                                @if (c.Semester == 1)
                                {
                                    <td>@(c.Critical ? "Yes":"No")</td>
                                    <td>@(c.CommonProgramPrerequiste ? "Yes":"No")</td>
                                    <td>@(c.Required ? "Yes":"No")</td>
                                }
                                else
                                {
                                    <td>-</td>
                                    <td>-</td>
                                    <td>-</td>
                                }
                                <td>@Html.ActionLink("Delete", "CourseDelete", "App", new { id = c.Id, degreeId = Model.Id }, new { @Class = "btn btn-danger btn-lg", onclick = "return confirm('Are you sure you wish to delete this course and course mappings?');" })</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
}
<!-- #endregion -->

    @if (Model.InstitutionId != DegreeMapping.Models.Institution.UCFId)
    {
        @Html.Action("_CourseMapperList", new { degreeId = Model.Id })
    }
