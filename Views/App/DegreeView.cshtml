@model DegreeMapping.Models.Degree
@{ 
    List<DegreeMapping.Models.Course> list_c = DegreeMapping.Models.Course.List(Model.Id);
    List<DegreeMapping.Models.Note> list_n = DegreeMapping.Models.Note.List(Model.Id);
    bool noCourseMapped = true;
}

<div class="row pt-5">
    <div class="col-md-12">
        <small>@Html.ActionLink("Institutions", "Institutions") <span class="glyphicon glyphicon-arrow-right"></span> @Html.ActionLink(Model.Institution, "InstitutionView", new { id = Model.InstitutionId })</small>
        <h1>@Model.Institution : @Html.Raw(Model.Name)</h1>
    </div>
</div>

<div class="row pt-5">
    <div class="col-md-6">
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(x => x.Active) : @(Model.Active?"Yes":"No")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(x => x.GPA) : @Model.GPA
            </div>
        </div>

        <div class="form-group hidden">
            <div class="col-md-10">
                @Html.LabelFor(x => x.DegreeType) : @Html.Raw(Model.DegreeType)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(x => x.LimitedAccess) : @(Model.LimitedAccess?"Yes":"No")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(x => x.RestrictedAccess) : @(Model.RestrictedAccess?"Yes":"No")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(x => x.Description) : @Html.Raw(Model.Description)
            </div>
        </div>

        <div class="form-group hidden">
            <div class="col-md-10">
                @Html.LabelFor(x => x.CatalogYear) : @Model.CatalogYear
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.ActionLink("Edit Degree", "DegreeEdit", new { id = Model.Id })
            </div>
        </div>
    </div>
    @if (Model.InstitutionId > 1)
    {
        <div class="col-md-6">
            <h2 class="pt-5">UCF Related Degree</h2>
            @if (string.IsNullOrEmpty(Model.UCFDegreeName))
            {
                <div>
                    Not Assigned
                </div>
            }
            else
            {
                <div>
                   Degree is mapped to UCF @Model.UCFDegreeName
                </div>
            }
        </div>
    }
</div>
<div class="row py-3 px-5">
    <div class="col-md-6">
        <h3>Courses</h3>
        @Html.ActionLink("Add Course", "CourseAdd", new { degreeId = Model.Id })
        @if (list_c.Count > 0)
        {
            int semester = 0;
    <ul>
        @foreach (DegreeMapping.Models.Course c in list_c.OrderBy(x => x.Semester).ThenBy(x => x.Code))
        {
            if (semester != c.Semester)
            {
                semester = c.Semester;
                <li style="list-style:none; margin-left:-20px"><strong>Semester @semester</strong></li>
            }
            if (c.UCFCourseId == null && c.InstitutionId != DegreeMapping.Models.Institution.UCFId)
            {
                noCourseMapped = false;
                <li>
                    <span style="color:red">❌</span>
                    @Html.ActionLink(c.Code, "CourseView", new { id = c.Id })
                </li>
            }
            else
            {
                <li>
                    @Html.ActionLink(c.Code, "CourseView", new { id = c.Id })
                </li>
            }
        }
    </ul>
        }
        @if(!noCourseMapped)
        { 
            <div>
                <span style="color:red">❌</span> - Course is not mapped
            </div>
        }
    </div>
    <div class="col-md-6">
        @if (Model.InstitutionId == DegreeMapping.Models.Institution.UCFId)
        {
            <div>
                <h3>Notes/Requirements</h3>
                @Html.ActionLink("Add Note", "NoteAdd", new { degreeId = Model.Id })
            </div>
            if (list_n.Count > 0)
            {
                <ul>
                    @foreach (DegreeMapping.Models.Note n in list_n)
                    {
                        <li>
                            @Html.ActionLink(n.Name, "NoteView", new { id = n.Id })
                        </li>
                    }
                </ul>
            }
        }
    </div>
</div>