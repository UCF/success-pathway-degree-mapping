@model DegreeMapping.Models.Note
@{
    string NoteTypeValue = DegreeMapping.Models.Note.GetNoteTypeValue(Model.NoteType);
 }

<div class="row pt-5">
    <div class="col-md-12">
        <small>@Html.ActionLink(Model.Institution + " Degree List", "InstitutionView", new { id = Model.InstitutionId }) <span class="glyphicon glyphicon-arrow-right"></span> @Html.ActionLink(Model.Degree, "DegreeView", new { id = Model.DegreeId })</small>
        <h1>@Model.CatalogYear @Model.Degree <em>@Model.Name</em></h1>
        <h2>@Model.Institution</h2>
        @*<div>@Html.LabelFor(x => x.ShowName) : @(Model.ShowName?"Yes":"No") </div>*@
    </div>
</div>

<div class="row">
    <div class="col-md-3 alert alert-warning mx-0 my-0 h5">
        <small>@DegreeMapping.Models.Note.Message.Get(Model.Institution)</small>
    </div>
</div>

<div class="row pt-5">
    <div class="col-md-12">
        @Html.LabelFor(x => x.NoteType) : @NoteTypeValue
        <br />
        @Html.LabelFor(x => x.Active) : @(Model.Active?"Yes":"No")
        <br />
        @Html.LabelFor(x => x.Value) :
        <div class="pl-3 py-3">
            @Html.Raw(Model.Value)
        </div>

        @*@Html.LabelFor(x => x.ForeignLanguageRequirement) : @(Model.ForeignLanguageRequirement?"Yes":"No")*@
        @*@Html.LabelFor(x => x.Required) : @(Model.Required?"Yes":"No")*@
        @*@Html.LabelFor(x => x.Section) : @Model.Section*@
        @Html.LabelFor(x => x.OrderBy) : @Model.OrderBy
        <br />
        @Html.ActionLink("Back", "DegreeView", new { id = Model.DegreeId }, new { @Class = "btn btn-primary btn-lg" })
        @Html.ActionLink("Edit Note", "NoteEdit", new { id = Model.Id }, new { @Class = "btn btn-info btn-lg" })
        @Html.ActionLink("Delete", "NoteDelete", new { id = Model.Id, degreeId = Model.DegreeId }, new { @class = "btn btn-danger btn-lg", onclick = "return confirm('Are you sure you wish to delete this note?');" })
    </div>
</div>