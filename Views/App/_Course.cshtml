@model DegreeMapping.Models.Course
@{
    DegreeMapping.Models.Degree d = DegreeMapping.Models.Degree.Get(Model.DegreeId);
    List<int> SemestersNotUsed = new List<int>() { 2, 3, 4 };
    List<DegreeMapping.Models.Course> list_course = new List<DegreeMapping.Models.Course>();
    if (d.UCFDegreeId.HasValue)
    {
        list_course = DegreeMapping.Models.Course.List(d.UCFDegreeId.Value, null).Where(x => x.Semester <= 1).ToList();
    }
    Model.Credits = (!string.IsNullOrEmpty(Model.CreditText)) ? 99 : Model.Credits;
    string cssClass = string.Empty;
}
@Html.Action("_TinyMCE")
@using (Html.BeginForm("CourseSave", "App", FormMethod.Post, new { @Class = "form-horizontal" }))
{
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.DegreeId)
    @Html.HiddenFor(x => x.CloneCourseId)

    <div class="row pt-2">
        <div class="col-md-6">
            <div class="form-group">
                <i>Last updated on @Model.UpdateDate.ToShortDateString() by @Model.NID</i>
            </div>
        </div>
    </div>

    <div class="row pt-2">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(x => x.Code) :
                @Html.TextBoxFor(x => x.Code, new { @class = "form-control", required = "required" })
            </div>
        </div>
    </div>

    <div class="row pt-2">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(x => x.Active) :
                @Html.CheckBoxFor(x => x.Active)
            </div>
        </div>
    </div>

    <div class="row pt-2">
        <div class="col-md-10">
            <div class="form-group hidden">
                @Html.LabelFor(x => x.Name) :
                @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
            </div>
        </div>
    </div>

    <div class="row pt-2">
        <div class="col-md-10">
            <div class="form-group">
                <!--
                @Html.LabelFor(x => x.Description) :
                @Html.TextBoxFor(x => x.Description, new { maxlength = "25", @class = "form-control" })
                <div><em>25 max characters</em></div>
                <div><em>Will display under the course</em></div>
                -->
                @Html.LabelFor(x => x.Description) :
                @Html.TextAreaFor(x => x.Description, new { @class = "form-control", cols = "80", rows = "20" })
            </div>
        </div>
    </div>

    <div class="row pt-2">
        <div class="col-md-10">
            <div class="form-group py-4 px-4" id="credits" style="border:3px solid #dff0d8">
                @Html.LabelFor(x => x.Credits) :
                @for (int i = 0; i < 13; i++)
                {
                    string classId = string.Format("creditId_{0}", i);
                    cssClass = (Model.Credits == i) ? "alert alert-success" : string.Empty;
                    <span class="px-3 @classId @cssClass"><label>@i @Html.RadioButtonFor(x => x.Credits, i)</label></span>
                }
                @{
                    cssClass = (!string.IsNullOrEmpty(Model.CreditText)) ? "alert alert-success" : string.Empty;
                }
                <div class="pt-3">
                    <span id="CardTextSection" class="px-3 @cssClass">
                        <label>
                            OR Custom Credits :
                            @Html.TextBoxFor(x => x.CreditText, new { @Class = "text-right mb-3", style = "width:80px" })
                        </label>
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class="row pt-2">
        <div class="col-md-10">
            @if (Model.InstitutionId == DegreeMapping.Models.Institution.UCFId)
            {
                <div class="form-group py-4 px-4" id="semesters" style="border:3px solid #fcf8e3">
                    @Html.LabelFor(x => x.Semester) :
                    @for (int i = 1; i <= 11; i++)
                    {
                        if (!SemestersNotUsed.Contains(i))
                        {
                            string semesterId = string.Format("semesterId_{0}", i);
                            cssClass = (Model.Semester == i) ? "alert alert-warning" : string.Empty;
                            <span class="px-3 @semesterId @cssClass"><label>@i @Html.RadioButtonFor(x => x.Semester, i)</label></span>
                        }
                    }
                </div>
            }
            else
            {
                <div class="form-group">
                    <span>
                        @Html.LabelFor(x => x.Semester) : @Model.Semester
                        @Html.HiddenFor(x => x.Semester)
                    </span>
                </div>
            }
        </div>
    </div>

    if (Model.InstitutionId == DegreeMapping.Models.Institution.UCFId)
    {
        <div class="row">
            <div class="col-md-10">
                <div class="form-group py-4 px-4" id="terms" style="border:3px solid #d9edf7">
                    @Html.LabelFor(x => x.Term) :
                    <label id="term_None" class="px-5">*Do not display <input type="radio" name="Term" checked="checked" value="" class="alert alert-info" /></label>
                    @{
                        if (Model.Term == DegreeMapping.Models.Course.CourseTerm.Summer)
                        {
                            <label id="term_@DegreeMapping.Models.Course.CourseTerm.Summer.Replace(" ", "_")" class="px-4 alert alert-info">@DegreeMapping.Models.Course.CourseTerm.Summer @Html.RadioButtonFor(x => x.Term, DegreeMapping.Models.Course.CourseTerm.Summer)</label>
                        }
                        else
                        {
                            <label id="term_@DegreeMapping.Models.Course.CourseTerm.Summer.Replace(" ", "_")" class="px-4">@DegreeMapping.Models.Course.CourseTerm.Summer @Html.RadioButtonFor(x => x.Term, DegreeMapping.Models.Course.CourseTerm.Summer)</label>
                        }

                        if (Model.Term == DegreeMapping.Models.Course.CourseTerm.Fall)
                        {
                            <label id="term_@DegreeMapping.Models.Course.CourseTerm.Fall.Replace(" ", "_")" class="px-4 alert alert-info">@DegreeMapping.Models.Course.CourseTerm.Fall @Html.RadioButtonFor(x => x.Term, DegreeMapping.Models.Course.CourseTerm.Fall)</label>
                        }
                        else
                        {
                            <label id="term_@DegreeMapping.Models.Course.CourseTerm.Fall.Replace(" ", "_")" class="px-4">@DegreeMapping.Models.Course.CourseTerm.Fall @Html.RadioButtonFor(x => x.Term, DegreeMapping.Models.Course.CourseTerm.Fall)</label>
                        }

                        if (Model.Term == DegreeMapping.Models.Course.CourseTerm.Spring)
                        {
                            <label id="term_@DegreeMapping.Models.Course.CourseTerm.Spring.Replace(" ", "_")" class="px-4 alert alert-info">@DegreeMapping.Models.Course.CourseTerm.Spring @Html.RadioButtonFor(x => x.Term, DegreeMapping.Models.Course.CourseTerm.Spring)</label>
                        }
                        else
                        {
                            <label id="term_@DegreeMapping.Models.Course.CourseTerm.Spring.Replace(" ", "_")" class="px-4">@DegreeMapping.Models.Course.CourseTerm.Spring @Html.RadioButtonFor(x => x.Term, DegreeMapping.Models.Course.CourseTerm.Spring)</label>
                        }
                    }
                    <p><em>*When selecting <u>Do not display</u> it defaults to Fall</em></p>
                </div>
            </div>
        </div>
    }
    if (Model.InstitutionId == DegreeMapping.Models.Institution.UCFId)
    {
        <div class="row pt-2">
            <div class="col-md-2">
                <div class="form-group">
                    @Html.LabelFor(x => x.Critical) :
                    @Html.CheckBoxFor(x => x.Critical)
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(x => x.CommonProgramPrerequiste) :
                    @Html.CheckBoxFor(x => x.CommonProgramPrerequiste)
                </div>
            </div>
            <div class="">
                <div class="form-group">
                    @Html.LabelFor(x => x.Required) :
                    @Html.CheckBoxFor(x => x.Required)
                </div>
            </div>
        </div>
    }

    @*if (User.Identity.Name == "jgiron")
        {
            <div class="row pt-2" style="display:none">
                <div class="col-md-10">
                    <div class="form-group">
                        <h5>Admin only</h5>
                        @Html.LabelFor(x => x.Description) :
                        @Html.TextAreaFor(x => x.Description, new { @class = "form-control", col = "10", rows = "4", maxlength = "100" })
                        <span class="alert alert-warning">100 characters max</span>
                    </div>
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(x => x.Description)
        }*@







    <div class="row pt-2">
        <div class="col-md-8">
            <div class="form-group text-right">
                <button type="submit" class="btn btn-success btn-lg">Save</button>
                @if (Model.Id > 0)
                {
                    @Html.ActionLink("Cancel", "DegreeView", new { id = Model.DegreeId }, new { @Class = "btn btn-primary btn-lg" })
                }
                else
                {
                    @Html.ActionLink("Cancel", "DegreeView", new { id = Model.DegreeId }, new { @Class = "btn btn-primary btn-lg" })
                }

                @if (Model.Id > 0)
                {
                    @Html.ActionLink("Delete", "CourseDelete", new { id = Model.Id, degreeId = Model.DegreeId }, new { @class = "btn btn-danger btn-lg", onclick = "return confirm('Are you sure you wish to delete this course?');" })
                }
            </div>
        </div>
    </div>
}

@Html.Action("_DisplayCloneInfo", "App", new { CloneId = Model.CloneCourseId, CloneType = "Course" })

<script type="text/javascript">
    $(document).ready(function () {
        $("#credits input:radio").on("click", function () {
            let credit = $(this).val();
            SetCredit(credit);
            $("#CreditText").val('');
            $('#CardTextSection').removeClass("alert");
            $('#CardTextSection').removeClass("alert-success");
        })

        $("#semesters input:radio").on("click", function () {
            let semester = $(this).val();
            SetSemester(semester);
        })

        $("#terms input:radio").on("click", function () {
            let term = $(this).val().replace(" ", "_");
            SetTerm(term);
        })

        $("#CreditText").on("input", function () {
            if ($(this).val().length > 0) {
                $('input[name="Credits"]').prop('checked', false);
                $('#CardTextSection').addClass("alert");
                $('#CardTextSection').addClass("alert-success");
                $("#credits input:radio").each(function () {
                    let id = $(this).val();
                    $(".creditId_" + id).removeClass("alert");
                    $(".creditId_" + id).removeClass("alert-success");
                })
            }
        })

        function SetCredit(credit) {
            $("#credits input:radio").each(function () {
                let id = $(this).val();
                if (id == credit) {
                    $(".creditId_" + id).addClass("alert");
                    $(".creditId_" + id).addClass("alert-success");
                } else {
                    $(".creditId_" + id).removeClass("alert");
                    $(".creditId_" + id).removeClass("alert-success");
                }
            })
        }

        function SetSemester(semester) {
            $("#semesters input:radio").each(function () {
                let id = $(this).val();
                if (id == semester) {
                    $(".semesterId_" + id).addClass("alert");
                    $(".semesterId_" + id).addClass("alert-warning");
                } else {
                    $(".semesterId_" + id).removeClass("alert");
                    $(".semesterId_" + id).removeClass("alert-warning");
                }
            })
        }

        function SetTerm(term) {
            $("#terms input:radio").each(function () {
                let id = $(this).val().replace(" ", "_");
                if (id == term) {
                    $("#term_" + id).addClass("alert");
                    $("#term_" + id).addClass("alert-info");
                } else {
                    $("#term_" + id).removeClass("alert");
                    $("#term_" + id).removeClass("alert-info");
                }
            })
        }
    })
</script>
