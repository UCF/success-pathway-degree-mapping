@{
    //List all catalogs
    List<DegreeMapping.Models.Catalog> list_cy = DegreeMapping.Models.Catalog.List();

    //Catalogs that do not contain degrees
    List<DegreeMapping.Models.Catalog> list_emptyCy = DegreeMapping.Models.Catalog.GetEmptyCatalog();
    DegreeMapping.Models.Catalog nextCatalog = list_emptyCy.OrderBy(x => x.Id).FirstOrDefault();

    DegreeMapping.Models.Catalog cy = list_cy.Where(x => x.Current).FirstOrDefault();
    int degreeCount = DegreeMapping.Models.Degree.List(DegreeMapping.Models.Institution.UCFId, cy.Id).Count();


    int nextCatalogId = cy.Id + 1;
}


@section JumbotronMain {
    <div class="jumbotron jumbotron-fluid">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h1 class="heading-underline">Clone Catalog</h1>
                </div>
            </div>
        </div>
    </div>
}

<div class="row" id="readThis">
    <div class="col-md-12">
        <div class="alert alert-warning">
            <h2>Read</h2>
            <ul>
                <li>You can only clone the current catalog.</li>
                <li>You can only clone to the next catalog.</li>
                <li>Catalogs are independent from each other.</li>
                <li>Cloning will copy all degrees, courses, course mappings, notes and requirements for all institutions.</li>
                <li>Once a new catalog has been created it cannot be deleted.</li>
                <li>You cannot overwrite an existing catalog</li>
            </ul>
        </div>
        <button type="button" class="btn btn-primary btn-lg float-right" onclick="cloneCatalog.continue()">Continue</button>
    </div>
</div>

<div id="CloneCatalog" class="row pt-5" style="display:none">
    <div class="col-md-4">
        <h2>Source Catalog</h2>
        <div>
            <h3>Patway Catalog @cy.Year</h3>
            <h4>@degreeCount degress</h4>
        </div>
    </div>
    <div class="col-md-4">
        <span class="fa fa-arrow-right fa-4x"></span>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            <div>
                <h2>Target Catalog</h2>
                <div>
                    <h3>Pathway Catalog @nextCatalog.Year</h3>
                    <h4>0 degrees</h4>
                    <input type="hidden" name="nextCatalogId" value="@nextCatalog.Id" />
                    
                </div>
            </div>
        </div>
    </div>
</div>

<div id="clone-process" class="row pt-5" style="display:none">
    <div class="col-md-12">
        <h2>Clone Process</h2>
        <div><button class="btn btn-success btn-lg" id="btnStart" onclick="cloneCatalog.init()" type="button">Start</button></div>
        <ol class="list-group pt-3">
            <li id="cloneDegree" class="list-group-item">Clone Degree<div><button onclick="cloneCatalog.cloneDegree()" class="btn btn-primary" id="btnCloneDegree">Clone Degrees</button></div></li>
            <li id="cloneCourse" class="list-group-item">Clone Courses<div><button onclick="cloneCatalog.cloneCourse()" class="btn btn-primary" id="btnCloneCourse">Clone Course</button></div></li>
            <li id="cloneCourseMapping" class="list-group-item">Clone Course Mappings</li>
            <li id="cloneNotes" class="list-group-item">Clone Notes/Requirements</li>
            <li id="cloneCustomCourseMapper" class="list-group-item">Clone Custom Course Mappings</li>
            <li id="cloneCustomCourseSemester" class="list-group-item">Clone Custom Course Semester</li>
        </ol>
    </div>
</div>


<script>
    cloneCatalog = {
        data: {},
        sourceCatalogId: @cy.Id,
        targetCataglogId: @nextCatalog.Id,
        url :  {
            cloneDegrees : "cloneDegreesUrl",
        },
        cloneDegree: function () {
            $.ajax({
                url: "/App/CloneDegrees?sourceCatalogId=" + cloneCatalog.sourceCatalogId +"&targetCatalogId="+cloneCatalog.targetCataglogId,
                method:"get",
                async: false,
                timeout: 10000,
            }).done(function(degreeResponse) {
                console.log(degreeResponse);
                if (degreeResponse['status'] == 1) {
                    console.log('1-clone Degree Response');
                    //cloneCatalog.cloneCourse();
                    cloneCatalog.enableButton('btnCloneCourse');
                    cloneCatalog.updateStepSuccess("cloneDegree");
                }
            })
        },
        cloneCourse: function () {
            $.ajax({
                url: "/App/CloneCourse?sourceCatalogId=" + cloneCatalog.sourceCatalogId,
                method: "get",
                async: false,
                timeout: 10000,
            }).done(function (courseResponse) {
                if (courseResponse['status'] == 1) {
                    console.log('2-clone course response');
                    //cloneCatalog.cloneCourseMapping();
                    cloneCatalog.updateStepSuccess("cloneCourse");
                }
            })
        },
        cloneCourseMapping: function () {
            $.ajax({
                url: "/App/CloneCourseMapping?sourceCatalogId=" + cloneCatalog.sourceCatalogId,
                method: "get",
                async: false,
                timeout: 10000,
            }).done(function (courseMappingResponse) {
                if (courseMappingResponse['status'] == 1) {
                    console.log('3-clone course mapping response');
                    cloneCatalog.cloneNotes();
                    cloneCatalog.updateStepSuccess("cloneCourseMapping");
                }
            })
        },

        cloneNotes: function () {
            $.ajax({
                url: "/App/CloneNotes?sourceCatalogId=" + cloneCatalog.sourceCatalogId,
                method: "get",
                async: false,
                timeout: 10000,
            }).done(function (courseResponse) {
                if (courseResponse['status'] == 1) {
                    console.log('notes');
                    cloneCatalog.cloneCustomCourseSemester();
                    cloneCatalog.updateStepSuccess("cloneNotes");
                }
            })
        },

        cloneCustomCourseSemester: function () {
            $.ajax({
                url: "/App/cloneCustomCourseSemester?sourceCatalogId=" + cloneCatalog.sourceCatalogId,
                method: "get",
                async: false,
                timeout:10000,
            }).done(function (cloneCCSResponse) {
                if (cloneCCSResponse['status'] == 1) {
                    console.log('4-clone Custom Course Semester');
                    cloneCatalog.cloneCustomCourseMapper();
                    cloneCatalog.updateStepSuccess("cloneCustomCourseSemester");
                }
            })
        },
        cloneCustomCourseMapper: function () {
            $.ajax({
                url: "/App/CloneCustomCourseMapper?sourceCatalogId=" + cloneCatalog.sourceCatalogId,
                method: "get",
                async: false,
                timeout: 10000,
            }).done(function (cloneCourseMappingResponse) {
                if (cloneCourseMappingResponse['status'] == 1) {
                    console.log('5-clone Custom Course Mapping Response');
                    cloneCatalog.updateStepSuccess("cloneCustomCourseMapper");
                }
            })
        },
        continue: function () {
            $('#CloneCatalog').show();
            $('#readThis').hide()
            $('#clone-process').show();
        },
        enableButton(id) {
            $('#' + id).prop('disabled', false);
        },
        updateStepSuccess: function (stepId) {
            $("#" + stepId).addClass("list-group-item-success").show("slow");
        },
        updateStepFailure: function (stepId) {
            $("#" + stepId).addClass("alist-group-item-danger");
        },
        init: function () {
            $("#btnStart").prop("disable", true);
            this.start();
        },
        start: function () {
            this.cloneDegree();
        }
    }



</script>