@model List<DegreeMapping.Models.Degree>
@{
    int catagoryId = ViewBag.catagoryId;
    List<DegreeMapping.Models.Catalog> list_cy = ViewBag.list_cy;
    string catalogYear = list_cy.Where(x => x.Id == catagoryId).Select(x => x.Year).FirstOrDefault();
}

@section JumbotronMain {
    <div class="jumbotron jumbotron-fluid">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="h1">Pathway Catalogs</div>
                </div>
            </div>
        </div>
    </div>
}

<div class="container">

    @Html.Action("_DisplayFavoriteDegree", "App", new { NID = User.Identity.Name } )



    


    
    <div class="row pt-5">
        <h2 class="heading-underline">Active Catalogs</h2>
        <div class="col-md-12">
            <div class="card-deck">
                @foreach (DegreeMapping.Models.Catalog cy in list_cy.OrderByDescending(x => x.Current).ThenBy(x => x.Year).Where(x => x.Active))
                {
                    string cssClassCurrent = string.Empty;//(cy.Current) ? "bg-success" : string.Empty;
                    <div class="card mt-5 mb-5">
                        <div class="py-5 card-header text-center @cssClassCurrent">
                            <h2 class="h1"> @cy.Year</h2>
                            @*@if (cy.Current)
                        {
                            <div>Current</div>
                        }
                        else
                        {
                            <div>&nbsp;</div>
                        }*@
                        </div>
                        @using (Html.BeginForm("CatalogSave", "App", FormMethod.Post, new { @Class = "form-horizontal" }))
                        {
                            @Html.HiddenFor(x => cy.Id)
                            @Html.HiddenFor(x => cy.Year)
                            @Html.HiddenFor(x => cy.Active)
                            @Html.HiddenFor(x => cy.Current)
                            <div class="card-block">
                                <div>@Html.LabelFor(c => cy.UndergraduateCatalogURL)</div>
                                <div>
                                    @Html.TextBoxFor(x => cy.UndergraduateCatalogURL, new { Style = "width:400px" })
                                    @if (!string.IsNullOrEmpty(cy.UndergraduateCatalogURL))
                                    {
                                        <p><a href="@cy.UndergraduateCatalogURL" title="@cy.UndergraduateCatalogURL" target="_blank">View undergraduate catalog</a></p>
                                    }
                                    else
                                    {
                                        <p>&nbsp;</p>
                                    }
                                </div>
                            </div>
                            <div class="card-footer pt-5">
                                @Html.ActionLink("View Catalog", "DegreeList", "App", new { id = cy.Id }, new { @Class = "btn btn-primary btn-block btn-lg" })
                                <button type="submit" class="btn btn-success btn-block btn-lg">Save</button>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@if (Model.Count > 0)
{
    string cataloYear = Model.Select(x => x.CatalogYear).FirstOrDefault();

    <div class="row pt-5">
        <h2>UCF Degrees</h2>
        <div class="col-md-12">
            <ul>
                @foreach (DegreeMapping.Models.Degree d in Model.OrderBy(x => x.Name))
                {
                    <li>@Html.ActionLink(d.Name, "DegreeView", "App", new { id = d.Id }, null)</li>
                }
            </ul>
        </div>
    </div>

}

<script type="text/javascript">
    $(document).ready(function () {
        $("#catalogId").on("change", function () {
            let id = $(this).val();
            window.location.href = '?id=' + id;
        })
    })
</script>