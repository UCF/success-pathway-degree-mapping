@model DegreeMapping.Models.CourseMapper
@{
    DegreeMapping.Models.Degree partnerDegree = DegreeMapping.Models.Degree.Get(Model.DegreeId);
    DegreeMapping.Models.Degree ucfDegree = DegreeMapping.Models.Degree.Get(partnerDegree.UCFDegreeId.Value);
    List<DegreeMapping.Models.Course> list_partnerCourses = DegreeMapping.Models.Course.List(Model.DegreeId);
    List<DegreeMapping.Models.Course> list_ucfCourses = DegreeMapping.Models.Course.List(ucfDegree.Id);
}

@using (Html.BeginForm("CourseMapperSave", "App", FormMethod.Post, new { @Class = "form-horizontal" }))
{
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.DegreeId)
    <div class="row pt-5">
        <div class="col-md-6">
            <h2 class="heading-underline">UCF Course</h2>
            <select name="UCFCourseIds" class="form-control form-control-lg" multiple="multiple" style="max-width:500px; height:200px">
                @foreach (DegreeMapping.Models.Course c in list_ucfCourses.OrderBy(x => x.Code).Where(x => x.Semester == 1))
                {
                    if (Model.UCFCourseIds.Contains(c.Id))
                    {
                        <option value="@c.Id" selected>@c.Code</option>
                    }
                    else
                    {
                        <option value="@c.Id">@c.Code</option>
                    }
                }
            </select>
        </div>

        <div class="col-md-6">
            <h2 class="heading-underline">Partner Course</h2>
            <select name="PartnerCourseIds" class="form-control form-control-lg" multiple="multiple" style="max-width:500px; height:200px">
                @foreach (DegreeMapping.Models.Course c in list_partnerCourses.OrderBy(x => x.Code))
                {
                    if (Model.PartnerCourseIds.Contains(c.Id))
                    {
                        <option value="@c.Id" selected>@c.Code</option>
                    }
                    else
                    {
                        <option value="@c.Id">@c.Code</option>
                    }
                }
            </select>
        </div>
    </div>

    <div class="row pt-5">
        <div class="col-md-6">
            <h2 class="heading-underline">Alternate UCF Course</h2>
            <select name="AlternateUCFCourseIds" class="form-control form-control-lg" multiple="multiple" style="max-width:500px; height:200px">
                <option>None</option>
                @foreach (DegreeMapping.Models.Course c in list_ucfCourses.OrderBy(x => x.Code).Where(x => x.Semester == 1))
                {
                    if (Model.AlternateUCFCourseIds.Contains(c.Id))
                    {
                        <option value="@c.Id" selected>@c.Code</option>
                    }
                    else
                    {
                        <option value="@c.Id">@c.Code</option>
                    }
                }
            </select>
        </div>

        <div class="col-md-6">
            <h2 class="heading-underline">Alternate Partner Course</h2>
            <select name="AlternatePartnerCourseIds" class="form-control form-control-lg" multiple="multiple" style="max-width:500px; height:200px">
                <option>None</option>
                @foreach (DegreeMapping.Models.Course c in list_partnerCourses.OrderBy(x => x.Code))
                {
                    if (Model.AlternatePartnerCourseIds.Contains(c.Id))
                    {
                        <option value="@c.Id" selected>@c.Code</option>
                    }
                    else
                    {
                        <option value="@c.Id">@c.Code</option>
                    }
                }
            </select>
        </div>
    </div>
    <div class="pt-5">
        <button type="submit" class="btn btn-success btn-lg">Save</button>
        @Html.ActionLink("Cancel", "DegreeView", "App", new { id = Model.DegreeId }, new { @Class = "btn btn-primary btn-lg" })
    </div>
}